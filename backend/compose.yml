version: "3.9"

services:
  app:
    image: bandup-backend:local
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env # giữ các biến khác của bạn ở đây
    environment:
      # Override kết nối để chạy với DB/Redis trong compose
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/band-up
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456

      SPRING_DATA_REDIS_HOST: cache
      SPRING_DATA_REDIS_PORT: 6379
      CLOUDFRONT_PRIVATE_KEY_PATH: /run/secrets/cloudfront_private_key.pem
      # Nếu app có actuator:
      # MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      # MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
    volumes:
      - /home/namdang-fdp/Downloads/private_key.pem:/run/secrets/cloudfront_private_key.pem:ro
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      # Nếu có Spring Actuator /actuator/health:
      test:
        [
          "CMD-SHELL",
          "wget -qO- http://localhost:8080/actuator/health | grep UP || exit 1",
        ]
      # Nếu KHÔNG có actuator, bạn có thể đổi thành:
      # test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 15

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: band-up
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d band-up"]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - pgdata:/var/lib/postgresql/data

  cache:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30

volumes:
  pgdata:
